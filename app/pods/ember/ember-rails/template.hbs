<h1>Ember Rails</h1> 
<h3>A Match Made In Heaven</h3>
<p>Every once in a while a coding revolution comes around that takes the tech world by storm. 
 And occasionally they can be combined together to create something powerful and amazing.
   In our opinion, the real world example is Ember.JS and Ruby on Rails.  In a world of 
   fragmented technologies and ideologies, the web and app development world finally has a 
   tandem that can be rallied behind. </p>
<br>
Ember taking charge of front-end development and Ruby on Rails running point as an API for
 the back-end.  The reason  we feel so strongly in this way can be summed up in one word. 
 <h1>The Beautiful Abstraction</h1>
<p>Coding is great and everything, but all developers strive for a principle strive (or should) for 
a principle known as DRY.  Don't Repeat Yourself. All developers can attest to the frustration 
when it comes to getting an application setup and configured.  Between endless files & folders 
being created, dependencies setup for not only your local machine, but the production 
environment as well as other teammates systems.  It can be tedious and maddening.  </p>
<h1>Enter Ember.JS and Ruby on Rails</h1>
<p>Ruby on Rails and Ember.JS are built on the same mentality.  Convention over configuration.  
They're opinionated.  And they're opinions are more than good enough for most use-cases.  
There will certainly be many different personalities and opinions out there and this is in no 
way meant to start a flame war, it's merely the excitement of finally finding the answer to a 
complex problem and feeling the need to tell the world.  Spend 6 months trying to optimize
 page-load times of a wordpress system and then tell me you don't see where we're coming 
 from.   </p>

{{outlet}}
