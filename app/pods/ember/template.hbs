<h3>The Rise of the URL</h3>
<h1>Overview</h1>
<p>Ember.JS is the most sophisticated framework for developing ambitious web applications that compete with native apps.  This can be seen with its incredibly fast page-load times and scalability. Part of Ember.JS and it's power is derived from it's convention to treat routes as a first class citizen.  Ever visit a web-page and want to share the exact state of the page you're at and it doesn't end up working out that way?  So have we.  Ember solves this by having a route driven application format.  It all starts with the Router.  The other main component of Ember.JS is how it is built for building “ambitious web apps” per it's branding line.  But what does that mean?  Ember de-couples its architecture to aide teams in not stepping on each others toes, allows for clear separation of concerns.  This reduces headaches, spaghetti code and also enhances performance.  The end result of all of this is a page that reduces server requests and LOADS FASTER even as your application grows complex.  By the time HTMLBars kicks in, Ember.JS Web Apps can compete with Native Apps (IOS and Android) in performance despite not being built for the specific devise.  </p>
<h1>Router</h1>
<p>The router translates a URL into a series of nested templates, each backed by a model. As the templates or models being shown to the user change, Ember automatically keeps the URL in the browser's address bar up-to-date.</p>
<h1>Models</h1>
<p>A model is an object that stores persistent state. Templates are responsible for displaying the model to the user by turning it into HTML. In many applications, models are loaded via an HTTP JSON API, although Ember is agnostic to the backend that you choose.
</p>

{{outlet}}
